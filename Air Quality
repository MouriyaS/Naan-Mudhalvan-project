import numpy as np
import warnings
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
warnings.filterwarnings("ignore")
def generate_data(samples_per_class=300):
    np.random.seed(42)
    temp_good = np.random.uniform(15, 30, samples_per_class)
    humidity_good = np.random.uniform(30, 70, samples_per_class)
    co2_good = np.random.uniform(300, 600, samples_per_class)
    pm25_good = np.random.uniform(0, 40, samples_per_class)
    no2_good = np.random.uniform(0, 40, samples_per_class)
    y_good = np.zeros(samples_per_class)
    temp_mod = np.random.uniform(20, 35, samples_per_class)
    humidity_mod = np.random.uniform(20, 80, samples_per_class)
    co2_mod = np.random.uniform(600, 1200, samples_per_class)
    pm25_mod = np.random.uniform(40, 100, samples_per_class)
    no2_mod = np.random.uniform(40, 100, samples_per_class)
    y_mod = np.ones(samples_per_class)
    temp_unhealthy = np.random.uniform(25, 40, samples_per_class)
    humidity_unhealthy = np.random.uniform(10, 90, samples_per_class)
    co2_unhealthy = np.random.uniform(1200, 2000, samples_per_class)
    pm25_unhealthy = np.random.uniform(100, 300, samples_per_class)
    no2_unhealthy = np.random.uniform(100, 200, samples_per_class)
    y_unhealthy = np.full(samples_per_class, 2)
    X = np.vstack([
        np.column_stack((temp_good, humidity_good, co2_good, pm25_good, no2_good)),
        np.column_stack((temp_mod, humidity_mod, co2_mod, pm25_mod, no2_mod)),
        np.column_stack((temp_unhealthy, humidity_unhealthy, co2_unhealthy, pm25_unhealthy, no2_unhealthy)),
    ])
    y = np.concatenate([y_good, y_mod, y_unhealthy])
    return X, y
X, y = generate_data(samples_per_class=300)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, max_depth=15, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Accuracy on Test Set:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred, zero_division=0))
cm = confusion_matrix(y_test, y_pred)
print("\nConfusion Matrix:\n", cm)
cv_scores = cross_val_score(model, X, y, cv=5)
print("\nCross-Validation Scores:", cv_scores)
print("Mean Cross-Validation Accuracy:", np.mean(cv_scores))
new_data = np.array([[30, 55, 750, 65, 70]])  # Example input
prediction = model.predict(new_data)
air_quality = {0: 'Good', 1: 'Moderate', 2: 'Unhealthy'}
print("\nPredicted Air Quality for new sample:", air_quality[prediction[0]])





